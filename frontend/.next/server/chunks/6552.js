"use strict";exports.id=6552,exports.ids=[6552],exports.modules={6552:(e,r,t)=>{t.d(r,{c:()=>useSavedProperties});var a=t(9885),s=t(647),o=t(6454),i=t(345);function useSavedProperties(e=null){let[r,t]=(0,a.useState)([]),[n,c]=(0,a.useState)(!1),[l,p]=(0,a.useState)(!0),[d,u]=(0,a.useState)(null),{user:v,session:y}=(0,s.a)(),h=(0,a.useCallback)(async(e={})=>{if(!v||!y?.access_token){t([]),p(!1);return}p(!0),u(null);try{let r=await o.ZP.getSavedProperties(y.access_token,e);t(r.data)}catch(e){console.error("Error fetching saved properties:",e),u(e.message||"Failed to load saved properties"),i.toast.error("Failed to load saved properties")}finally{p(!1)}},[v,y]),g=(0,a.useCallback)(async()=>{if(!e||!v||!y?.access_token){c(!1);return}try{let r=await o.ZP.isPropertySaved(y.access_token,e);c(r)}catch(e){console.error("Error checking if property is saved:",e),c(!1)}},[e,v,y]),f=(0,a.useCallback)(async t=>{if(!v||!y?.access_token)return i.toast.error("You must be logged in to save properties"),!1;let a=t||e;if(!a)return i.toast.error("Property ID is required"),!1;try{return await o.ZP.saveProperty(y.access_token,a),e&&e===a&&c(!0),r.length>0&&h(),i.toast.success("Property saved successfully"),!0}catch(r){if(console.error("Error saving property:",r),r.message&&r.message.includes("already saved"))return e&&e===a&&c(!0),!0;return i.toast.error(r.message||"Failed to save property"),!1}},[v,y,e,r.length,h]),w=(0,a.useCallback)(async r=>{if(!v||!y?.access_token)return i.toast.error("You must be logged in to unsave properties"),!1;let a=r||e;if(!a)return i.toast.error("Property ID is required"),!1;try{return await o.ZP.unsaveProperty(y.access_token,a),e&&e===a&&c(!1),t(e=>e.filter(e=>e.property_id!==a)),i.toast.success("Property removed from saved list"),!0}catch(r){if(console.error("Error unsaving property:",r),r.message&&r.message.includes("not saved"))return e&&e===a&&c(!1),!0;return i.toast.error(r.message||"Failed to remove property from saved list"),!1}},[v,y,e]),m=(0,a.useCallback)(async r=>{let t=r||e;if(!t)return!1;if(e===t)return n?w(t):f(t);try{let e=await o.ZP.isPropertySaved(y?.access_token,t);return e?w(t):f(t)}catch(e){return console.error("Error toggling saved status:",e),!1}},[n,e,f,y?.access_token,w]),P=(0,a.useCallback)(async()=>{if(!v||!y?.access_token)return i.toast.error("You must be logged in to clear saved properties"),!1;try{return await o.ZP.deleteAllSavedProperties(y.access_token),t([]),e&&c(!1),i.toast.success("All saved properties cleared"),!0}catch(e){return console.error("Error clearing saved properties:",e),i.toast.error(e.message||"Failed to clear saved properties"),!1}},[v,y,e]);return(0,a.useEffect)(()=>{e&&g()},[e,g]),{savedProperties:r,isSaved:n,loading:l,error:d,fetchSavedProperties:h,saveProperty:f,unsaveProperty:w,toggleSaved:m,clearAllSavedProperties:P}}},6454:(e,r,t)=>{t.d(r,{ZP:()=>s});let a="bigdealegypt.up.railway.app/api",getSavedProperties=async(e,r={})=>{try{let t=`${a}/saved-properties`,s=new URLSearchParams;r.page&&s.append("page",r.page),r.limit&&s.append("limit",r.limit),s.append("_t",Date.now()),t+=`?${s.toString()}`;let o=await fetch(t,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache"},credentials:"include"});if(!o.ok){let e=await o.json();throw Error(e.error?.message||"Failed to fetch saved properties")}return await o.json()}catch(e){throw console.error("Get saved properties error:",e),e}},isPropertySaved=async(e,r)=>{try{let t=await fetch(`${a}/saved-properties/check/${r}`,{method:"GET",headers:{Authorization:`Bearer ${e}`},credentials:"include"});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to check if property is saved")}let s=await t.json();return s.isSaved}catch(e){return console.error("Check if property is saved error:",e),!1}},saveProperty=async(e,r)=>{try{let t=await fetch(`${a}/saved-properties/${r}`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},credentials:"include"});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to save property")}return await t.json()}catch(e){throw console.error("Save property error:",e),e}},unsaveProperty=async(e,r)=>{try{let t=await fetch(`${a}/saved-properties/${r}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`},credentials:"include"});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to unsave property")}return await t.json()}catch(e){throw console.error("Unsave property error:",e),e}},deleteAllSavedProperties=async e=>{try{let r=await fetch(`${a}/saved-properties`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`},credentials:"include"});if(!r.ok){let e=await r.json();throw Error(e.error?.message||"Failed to delete all saved properties")}return await r.json()}catch(e){throw console.error("Delete all saved properties error:",e),e}},s={getSavedProperties,isPropertySaved,saveProperty,unsaveProperty,deleteAllSavedProperties}}};