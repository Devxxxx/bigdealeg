"use strict";exports.id=1068,exports.ids=[1068],exports.modules={1068:(e,r,t)=>{t.d(r,{G3:()=>createProperty,ZP:()=>a});let o="bigdealegypt.up.railway.app/api",getAllProperties=async()=>{try{let e=await fetch(`${o}/properties`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok){let r=await e.json();throw Error(r.error?.message||"Failed to fetch properties")}let r=await e.json();return r.properties||[]}catch(e){throw console.error("Get properties error:",e),e}},getPropertyById=async e=>{try{let r=await fetch(`${o}/properties/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!r.ok){let e=await r.json();throw Error(e.error?.message||"Failed to fetch property")}let t=await r.json();return t.property}catch(e){throw console.error("Get property error:",e),e}},getSimilarProperties=async(e,r=3)=>{try{let t=await fetch(`${o}/properties/${e}/similar?limit=${r}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to fetch similar properties")}let a=await t.json();return a.properties||[]}catch(e){throw console.error("Get similar properties error:",e),e}},incrementPropertyViews=async(e,r)=>{try{let t=await fetch(`${o}/properties/${e}/increment-views`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to increment property views")}}catch(e){throw console.error("Increment property views error:",e),e}},getPropertyImages=async(e,r=null)=>{try{let t=`${o}/properties/${e}/images`;r&&(t+=`?type=${r}`);let a=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json"}});if(!a.ok){let e=await a.json();throw Error(e.error?.message||"Failed to fetch property images")}let i=await a.json();return i.images||[]}catch(e){throw console.error("Get property images error:",e),e}},createProperty=async(e,r)=>{try{console.log("Creating property with data:",r);let t=await fetch(`${o}/properties`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(r)});if(!t.ok){let e;let r=await t.text();try{let t=JSON.parse(r);e=t.error?.message||"Failed to create property"}catch(o){e=r||`Failed with status ${t.status}`}throw Error(e)}return await t.json()}catch(e){throw console.error("Create property error:",e),e}},uploadPropertyImages=async(e,r,t)=>{try{let a=await fetch(`${o}/properties/${r}/images`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({images:t})});if(!a.ok){let e=await a.json();throw Error(e.error?.message||"Failed to upload property images")}return await a.json()}catch(e){throw console.error("Upload property images error:",e),e}},deletePropertyImage=async(e,r)=>{try{let t=await fetch(`${o}/properties/images/${r}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}});if(!t.ok){let e=await t.json();throw Error(e.error?.message||"Failed to delete property image")}return await t.json()}catch(e){throw console.error("Delete property image error:",e),e}},updateProperty=async(e,r,t)=>{try{let a=await fetch(`${o}/properties/${r}`,{method:"PUT",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!a.ok){let e=await a.json();throw Error(e.error?.message||"Failed to update property")}return await a.json()}catch(e){throw console.error("Update property error:",e),e}},uploadImage=async(e,r,t=()=>{})=>{try{let a=new FormData;a.append("image",r);let i=await fetch(`${o}/upload/image`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:a,onUploadProgress:e=>{let r=Math.round(100*e.loaded/e.total);t(r)}});if(!i.ok){let e=await i.json();throw Error(e.error?.message||"Failed to upload image")}let s=await i.json();return s.url}catch(e){throw console.error("Upload image error:",e),e}},a={getAllProperties,getPropertyById,getSimilarProperties,incrementPropertyViews,getPropertyImages,createProperty,uploadPropertyImages,deletePropertyImage,updateProperty,uploadImage}}};